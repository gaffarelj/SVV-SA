import math
import numpy as np
from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


def interp_two_points(new_coord, point_a, point_b, load_a, load_b):
	"""
	Interpolate the load between two points.
	Point a is before the new coordinate, point b after.
	"""
	if point_a == point_b:	# Make sure point a is different to point b (no zero division)
		return load_a
	# The load at the new coordinate is interpolated by fitting a line to the known
	# load before and after that new coordinate
	return load_a + (new_coord - point_a) * (load_b - load_a) / (point_b - point_a)

unittest_interp = interp_two_points(1., 0., 2., 50., 100.)        #testing interpolation function with point (0,50) and (2,100) and checking whether it gives 75
if unittest_interp != 75.0:
    raise AssertionError
    
unittest_interp = interp_two_points(-50, -100, 100., 100., -100.)   #testing interpolation function with positive and negative values and testing whether the correct analytically found answer is given
if unittest_interp != 50.:
    raise AssertionError



print("No AssertionErrors have arised, and the interp_two_points function works correctly")
